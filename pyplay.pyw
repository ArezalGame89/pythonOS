# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pyplay.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import pygame
import json

from PyQt5 import QtCore, QtGui, QtWidgets
from pathlib import Path

os.environ["PYGAME_HIDE_SUPPORT_PROMPT"] = "hide"

pygame.mixer.init()


soundList = []
for i in os.listdir("pyPlay/sounds"):
    if i != "readme.txt" and (
        i.endswith(".mp3") or i.endswith(".wav") or i.endswith(".ogg")
    ):
        soundList.append(i)


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(578, 452)
        self.lang = self.getOption("language")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(130, 40, 301, 191))
        self.listWidget.setObjectName("listWidget")
        self.listWidget.addItems(soundList)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(170, 250, 350, 16))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(125, 280, 175, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.playSound)
        self.pushButton.setEnabled(bool(soundList))
        self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_1.setGeometry(QtCore.QRect(300, 280, 160, 28))
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_1.clicked.connect(self.stopSound)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def getOption(self, optionName):
        weirdPath = Path("data")
        with open(weirdPath / "settings.json", "r") as f:
            return json.load(f).get(optionName)

    def playSound(self):
        pygame.mixer.music.load(
            "pyPlay/sounds/" + soundList[self.listWidget.currentRow()]
        )
        pygame.mixer.music.play()

    def stopSound(self):
        pygame.mixer.music.stop()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "pyPlay"))
        if self.lang == "english":
            self.label.setText(_translate("MainWindow", "Select a sound you want to play."))
            self.pushButton.setText(_translate("MainWindow", "Play selected sound"))
            self.pushButton_1.setText(_translate("MainWindow", "Stop sound"))
        elif self.lang == "spanish-gt":
            self.label.setText(_translate("MainWindow", "Seleccione un sonido que desee reproducir."))
            self.pushButton.setText(_translate("MainWindow", "Reproducir sonido"))
            self.pushButton_1.setText(_translate("MainWindow", "Detener el sonido"))


import sys

icon = QtGui.QIcon()
app = QtWidgets.QApplication(sys.argv)
icon.addPixmap(
    QtGui.QPixmap("icons/pyplay/window-icon.png"), QtGui.QIcon.Selected, QtGui.QIcon.On
)
app.setWindowIcon(icon)
MainWindow = QtWidgets.QMainWindow()
ui = Ui_MainWindow()
ui.setupUi(MainWindow)
MainWindow.show()
sys.exit(app.exec_())
